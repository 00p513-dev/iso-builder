#!/bin/bash

echo "P: Begin executing iso binary hook..."

source ./terraform.conf

# mount ubuntu's iso
mkdir -p mnt
mount -o loop,ro ubuntu.iso mnt

# copy everything over except the rootfs
rsync \
    -a \
    --exclude=/.disk/info \
    --exclude=/autorun.inf \
    --exclude=/casper/filesystem.squashfs \
    --exclude=/casper/initrd.lz \
    --exclude=/casper/md5sum.txt \
    --exclude=/casper/vmlinuz \
    --exclude=/casper/vmlinuz.efi \
    --exclude=/dists \
    --exclude=/install \
    --exclude=/isolinux \
    --exclude=/md5sum.txt \
    --exclude=/pics \
    --exclude=/pool \
    --exclude=/preseed \
    --exclude=/ubuntu \
    --exclude=/wubi.exe \
    mnt/ \
    binary

# unmount ubuntu's iso and delete mount point dir
umount mnt
rm -rf mnt

# replace their init with ours
rm -rf binary/casper/vmlinuz-*
rm -rf binary/casper/initrd.*
cp chroot/boot/$(ls -1 chroot/boot | grep ^vmlinuz | sort --version-sort | tail -n 1) binary/casper/vmlinuz
cp chroot/boot/$(ls -1 chroot/boot | grep ^initrd | sort --version-sort | tail -n 1) binary/casper/initrd.lz

# If the image pre-installs network-manager, let it manage all devices by
# default. Installing NM on an existing system only manages wifi and wwan via
# /usr/lib/NetworkManager/conf.d/10-globally-managed-devices.conf. When setting
# the global backend to NM, netplan overrides that file.
if [ -d chroot/usr/lib/NetworkManager ]; then
    echo "===== Enabling all devices in NetworkManager ===="
    mkdir -p chroot/etc/netplan
    cat <<EOF > chroot/etc/netplan/01-network-manager-all.yaml
# Let NetworkManager manage all devices on this system
network:
  version: 2
  renderer: NetworkManager
EOF
else
    echo "==== NetworkManager not installed ===="
fi

# customization
echo "$CHANGELOG" >                  binary/.disk/release_notes_url
sed -i "s/Ubuntu/$NAME/"             binary/boot/grub/loopback.cfg
sed -i "s/vmlinuz.efi/vmlinuz/"      binary/boot/grub/loopback.cfg
sed -i "s/Ubuntu/$NAME/"             binary/boot/grub/grub.cfg
sed -i "s/vmlinuz.efi/vmlinuz/"      binary/boot/grub/grub.cfg
sed -i "s/Ubuntu/$NAME/g"            binary/isolinux/*.tr # fix translations
sed -i "s/Ubuntu/$NAME/"             binary/README.diskdefines
sed -i "s/$BASEVERSION/$VERSION/"    binary/README.diskdefines
sed -i "s/LTS//"                     binary/README.diskdefines
sed -i "s/\".*\"/\"$CODENAME\"/"     binary/README.diskdefines
